events {
    worker_connections 4096;
    use epoll;  # Event model mais eficiente para Linux
}

http {
    # Configurações básicas de performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 10s;
    keepalive_requests 10000;  # Aumentado para alta carga

    # Timeouts otimizados
    client_body_timeout 5s;
    client_header_timeout 5s;
    reset_timedout_connection on;

    # Buffer sizes mínimos necessários
    client_body_buffer_size 8k;
    client_header_buffer_size 1k;
    client_max_body_size 1m;  # Reduzido para API REST

    upstream rinhabackend {
        least_conn;

        server app-1:9999 max_fails=2 fail_timeout=5s;
        server app-2:9999 max_fails=2 fail_timeout=5s;

        keepalive 100;  # Aumentado para alta concorrência
    }

    server {
        listen 9999 reuseport fastopen=256;  # TCP Fast Open habilitado
        server_name _;

        access_log off;  # Desabilitado para máxima performance
        error_log /dev/null crit;  # Somente erros críticos

        location / {
            proxy_pass http://rinhabackend;
            proxy_http_version 1.1;

            proxy_set_header Connection "";
            proxy_set_header X-Real-IP $remote_addr;

            # Otimizações críticas
            proxy_buffering off;
            proxy_request_buffering off;
            proxy_ignore_client_abort on;

            # Failover rápido
            proxy_next_upstream error timeout non_idempotent;
            proxy_next_upstream_timeout 1s;
            proxy_next_upstream_tries 1;

            # Timeouts agressivos
            proxy_connect_timeout 1s;
            proxy_send_timeout 3s;
            proxy_read_timeout 3s;
        }
    }
}